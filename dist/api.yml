openapi: 3.0.0
info:
  description: Assignment 3.1 API
  version: "1.0.0"
  title: Assignment 3.1 API
  contact:
    email: avichaie@post.bgu.ac.il 
paths:
  /register:  
    post:
      tags: 
        - authentication
      summary: register 
      description: register new user to system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_user'
      responses:
        '201':
          description: "user {user_name} successfully added"
        '409':  
          description: "user could not be added, name taken."
        '400':
          description: "Something went wrong when trying to insert new user to system"
  /login:  
    post:
      tags: 
        - authentication
      summary: user log in
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        "200":
          description: "user {user_name} successfully logged in"
          content:
            application/json:
              schema:
                type: object
                properties:
                  roles:
                    type: array
                    items:
                      type: object
                      description: different roles of user that logged in
                      example: {user_role: referee}
        "401":
          description: "Invalid username/password"
        "404":
          description: "Something went wrong when trying to get roles of user"
  /logout:  
    get:
      tags: 
        - authentication
      summary: user logout
      responses:
        "200":
          description: ""
  /league/details:
    get:
      tags: 
        - league
      summary: get_league_details 
      description: retrieves the league's name, stage name, season and next match details.
      responses:
        "200":
          description: league's details successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/league_details'
        "404":
          description: could not find league with league id {league_id}
        "400":
          description: Something went wrong when trying to get stage by id
  /league/{league_id}/matches:
    get:
      tags: 
        - league
        - matches
      summary: get_matches_in_league 
      description: retrieves all the matches from the local DB (all curret) 
      parameters: 
      - in: "path"
        name: league_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: league matches successfully retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/matches_full_details_with_event_log'
        "400":
          description: Something went wrong when trying to search for matches
  /matches/{stage_id}:
    get:
      tags: 
        - matches
      summary: get matches in stage 
      description: games in current stage page 
      parameters: 
      - in: "path"
        name: stage_id
        required: true
        schema:
          type: integer
          example: 0
      responses:
        "200":
          description: 'matches details in stage retrieved'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/matches_full_details_with_event_log'
        "400":
          description: Something went wrong when trying to retrieve matches
          
          
  /teams/get_page_details/{team_id}:
    get:
      tags: 
        - teams
      description: get matches and players information for {team_id} 
      parameters: 
      - in: "path"
        name: team_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: successfully retrieved team's details
          content:
            application/json:
              schema:
                $ref:  '#/components/schemas/team_page_details'

                    
        "400":
          description: Something went wrong when trying to retrieve matches OR Something went wrong when trying to retrieve team or players' details
          
  # /teams/{team_name}/matches:
  #   get:
  #     tags: 
  #       - teams
  #     summary: get_matches_by_team_name
  #     description: get all matches team has played in or will play in. 
  #     parameters: 
  #     - in: "path"
  #       name: team_name
  #       required: true
  #       schema:
  #         type: string
  #     responses:
  #       "200":
  #         description: "returned matches that match team id"
  #       "404":
  #         description: "invalid team id, could not find matches"
  
  /users/union_rep/matches:
    post:
      tags: 
        - matches
        - union_rep
      summary: set_new_match 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/new_match'
      responses:
        '201':
          description: "match successfully added"
        '400':
          description: "can't add match due to unmatching depenedencies or bad input"
        '404':
          description: "couldn't find venue for match"
        
          
          
  /users/union_rep/matches/{match_id}/event_log:
    post:
      tags: 
        - matches
        - union_rep
      summary: add_event_to_match 
      description: add new event to event log of match_id
      parameters:
      - name: match_id
        in: "path" 
        required: true
        schema:
           $ref: '#/components/schemas/new_game_event'
      responses:
        '201':
          description: "event of type ${event_type_name} was added successfully"
        '400':
          description: "can't add event to match since it was over or does not exist or due to bad input"
  /players/{player_id}:
    get:
      tags: 
        - players
      summary: get_player_by_id 
      description: get preview of player for player page
      parameters: 
      - in: "path"
        name: player_id
        required: true
        schema:
          type: integer
      responses:
        "200":
          description: ''
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/player_full_details'
        "404":
          description: "invalid player id"

  /search/{category_name}/{name_query}:
    get:
      tags: 
        - search
      summary: search_by_name 
      description: search for {category_name} based on partial or full {name_query} 
      parameters: 
      - in: "path"
        name: category_name
        required: true
        schema:
          type: string
      - in: "path"
        name: name_query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "returned players that match name query"
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/player_full_details'
                    - $ref: '#/components/schemas/team_details'
        "400":
          description: "Something went wrong when trying to search in external API"
          

  /users/favorites/{category_name}:
    get:
      tags: 
        - favorites
      summary: get_favorites 
      description: fetch all favorite {category_name}s of {user_id}. 
      parameters:
      - name: user_id
        in: cookie 
        required: true
        schema:
          type: integer
      - name: category_name
        in: path
        required: true
        schema:
          type: string
          example: match, team or player.
      responses:
        "200":
          description: ''
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  oneOf:
                    - $ref: '#/components/schemas/player_full_details'
                    - $ref: '#/components/schemas/team_details'
                    - $ref: '#/components/schemas/match_full_details' #without event logs because future matches
        "400":
          description: "invalid category name"
    post:
      tags: 
        - favorites
      summary: add_to_favorites
      description: fetch a {category_name} to {user_id}'s favorites
      parameters:
      - name: user_id
        in: cookie 
        required: true
        schema:
          type: integer
      - name: category_name
        in: path
        required: true
        schema:
          type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                favorite_id:
                  type: integer
                  description: id of favorite {category_name} to add to user
                  example: 3
      responses:
        '201':
          description: "The {category_name} was successfully saved as a favorite"
        "400":
          description: "invalid category name"
          
          
components:
  schemas:
    new_user:
      type: object
      properties:
        username:
          type: string
          pattern: '/^[a-zA-Z]+$/' #letters only?
          minLength: 3
          maxLength: 8
          # required: true
          example: 'tom'
        password:
          type: string
          pattern: '/[a-zA-Z]\d/g' #has number and letter
          minLength: 5
          maxLength: 10
          # required: true
          example: 'rob1'
        # confirmation_password: no idea how to confirm versus password
        first_name:
          type: string
          example: 'Widget'
        last_name:
          type: string
          example: 'Adapter'
        country: #do we need to enforce this further?
            type: string
            example: 'Kings Dominion'
        email:
          type: string
          format: email
        profile_pic:
          type: string
          format: URL
          example: 'https://www.some_domain.com/my_img.jpg'
    Login:
      type: object
      description: user info for login
      properties:
        username:
           type: string
           example: 'tom'
        password:
           type: string
           example: 'rob1'
    new_match:
      type: object
      properties:
        match_date_time:
          type: string
          format: date-time
          description: 'yyyy-mm-dd hh:mm:ss'
          example: '2012-12-22 03:59:12'
        home_team_name:
          type: string
          example: 'OB'
        away_team_name:
          type: string
          example: 'AGF'
        stage:
          type: string
          example: 'Knock Out'  
    new_game_event:
      type: object
      properties:
        minute_in_game:
          type: integer
          description: exact time during match in which the event occurred
          minimum: 0
          example: 35
        event_type:
          type: string
          description: possible events - Goal,Offside,Foul,Red-Card,Yellow-Card,Injury,Substitution. any other event will be labeled as "Other".
          example: 'Other'
        event_description:
          type: string
          example:  red card was given to messi for not being organized
    league_details:
      type: object
      properties:
        league_name:
          type: string
          example: 'SuperLiga'
        current_season_name:
          type: string
          example: '2020-2021'
        current_stage_name:
          type: string
          example:  Conference League Play-offs - Final
        next_match_details:
          $ref: '#/components/schemas/match_full_details'
    match_in_db_details:
      type: object
      properties:
        match_id:
          type: integer
          example: 7
        venue:
          type: string
          example: 'Nature Energy Park'
        home_team_goals:
          type: integer
          example:  0
        away_team_goals:
          type: integer
          example:  0
        referee_id:
          type: integer
          description: referee assigned to the match
          example:  12
        is_over:
          type: boolean
          description: 0 if match is not over, 1 otherwise.
          example: 0
    match_full_details:
      allOf:
        - $ref: '#/components/schemas/new_match'
        - $ref: '#/components/schemas/match_in_db_details'
    matches_full_details_with_event_log:
      type: array
      items:
        type: object
        properties:
          match_with_event_log:
            allOf:
            - $ref: '#/components/schemas/match_full_details'
            - type: array
              items:
                allOf:
                - type: integer
                  description: match_id
                - $ref: '#/components/schemas/new_game_event'
    player_basic_details:
      type: object
      properties:
        id:
          type: integer
          example: 82808
        name:
          type: string
          example: 'Avichai Edri'
        nationality:
          type: string
          example:  'Denmark'
        country:
          type: string
          example:  'Denmark'
        birth_date:
          type: string
          example:  '31/03/1985'
        height:
          type: string
          example: '188 cm'
        weight:
          type: string
          example: '78 kg'
        image: 
          type: string
          description: image_path
          example: 'https://cdn.sportmonks.com/images/soccer/players/24/82808.png'
    player_full_details:
      allOf:
      - $ref: '#/components/schemas/player_basic_details'
      - type: string
        description: team_name
      - type: string
        description: position
    team_details:
      type: object
      properties:
        id:
          type: integer
          example: 1789
        name:
          type: string
          example: 'OB'
        logo:
          type: string
          description: logo path
          example:  "https://cdn.sportmonks.com/images//soccer/teams/29/1789.png"
        venue_id:
          type: integer
          description: home team court
          example: 82808
    team_page_details:
      type: object
      properties:
        players_details:  
          type: array
          items:
              $ref: '#/components/schemas/player_basic_details'
        match_details:  
          $ref: '#/components/schemas/matches_full_details_with_event_log'